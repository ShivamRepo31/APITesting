<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-NJEIEAH" failures="0" tests="6" name="Runner.TestRunner" time="5.041" errors="2" timestamp="2024-04-20T21:40:54 IST" skipped="0">
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.166"/>
  <system-out/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.446">
    <error message="Cannot invoke &quot;java.lang.Long.longValue()&quot; because the return value of &quot;io.restassured.internal.common.path.ObjectConverter.convertObjectTo(Object, java.lang.Class)&quot; is null" type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "java.lang.Long.longValue()" because the return value of "io.restassured.internal.common.path.ObjectConverter.convertObjectTo(Object, java.lang.Class)" is null
at io.restassured.path.json.JsonPath.getLong(JsonPath.java:340)
at apiStepDef.apiTestStepDef.the_api_response_timestamp_should_not_be_less_than_3_seconds_from_the_current_time_in_seconds(apiTestStepDef.java:85)
at âœ½.the API response timestamp should not be less than 3 seconds from the current time in seconds(file:///C:/Users/Shivam%20Srivastava/eclipse-workspace/APITesting/src/test/Resource/Feature/apiTest.feature:20)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <system-out/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.107">
    <error message="The step &#039;the API response should match the JSON schema&#039; is undefined.
You can implement this step using the snippet(s) below:

@Then(&quot;the API response should match the JSON schema&quot;)
public void the_api_response_should_match_the_json_schema() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.testng.UndefinedStepException">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'the API response should match the JSON schema' is undefined.
You can implement this step using the snippet(s) below:

@Then("the API response should match the JSON schema")
public void the_api_response_should_match_the_json_schema() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <system-out/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.116"/>
  <system-out/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="3.942"/>
  <system-out/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.264"/>
  <system-out/>
</testsuite> <!-- Runner.TestRunner -->
